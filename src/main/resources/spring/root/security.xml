<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:http pattern="/resource/**" security="none"/>

	<security:http>
		<!-- ### 로그인/로그아웃: 방법2 ### -->				
		<security:form-login login-page="/signin/content"		
					 login-processing-url="/SIGNIN"	 
					 username-parameter="memail"
					 password-parameter="mpassword"
					 authentication-success-handler-ref="AuthenticationSuccessHandler"
					 authentication-failure-handler-ref="AuthenticationFailureHandler"/>			 
						 
		<security:logout logout-url="/SIGNOUT" 
						 success-handler-ref="LogoutSuccessHandler"/>
						 
		<!-- ### 사이트간 요청 위조 비활성화(기본: 활성화) ###  -->
		<security:csrf disabled="true"/>		
		
		<!-- ### url 권한 설정 ### -->
		<security:intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/manager/*" access="hasRole('ROLE_MANAGER')"/>
		<security:intercept-url pattern="/setting/*" access="isAuthenticated()"/>	 
		 
		<security:intercept-url pattern="/**" access="permitAll"/>
		
		<!-- ### 권한 없음(403) 에러일 경우 포워드 페이지 ### -->
		<security:access-denied-handler error-page="/exception/error403"/>
	</security:http>	
	
	<!-- 인증 관리자 설정 -->
	<security:authentication-manager>
		<security:authentication-provider ref="daoAuthenticationProvider"/>
	</security:authentication-manager>
	
	<!-- 인증 제공자 설정 -->
	<bean id="daoAuthenticationProvider" 
		  class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="jdbcUserService"/>
		<property name="authoritiesMapper" ref="roleHierarchyAuthoritiesMapper"/>
	</bean>
	
	<!-- 사용자 정보 설정 -->
	<security:jdbc-user-service id="jdbcUserService"
		data-source-ref="dataSource"
		users-by-username-query="select memail, mpassword, menabled from member where memail=?"
		authorities-by-username-query="select memail, mrole from member where memail=?"/>
		
	<!-- 권한 계층 설정 -->
	<bean id="roleHierarchyAuthoritiesMapper" 
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
		<constructor-arg>
			<bean class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
				<property name="hierarchy">
					<value>
						ROLE_ADMIN > ROLE_MANAGER
						ROLE_MANAGER > ROLE_USER
					</value>
				</property>
			</bean>
		</constructor-arg>
	</bean>
	
	<!-- #################### 인증 성공/실패 처리 핸들러 #################### -->
	<bean id="AuthenticationSuccessHandler" class="com.mycompany.webapp.security.AuthenticationSuccessHandler">
		<property name="alwaysUseDefaultTargetUrl" value="false"/>
		<property name="defaultTargetUrl" value="/"/>
	</bean>
	
	<bean id="AuthenticationFailureHandler" class="com.mycompany.webapp.security.AuthenticationFailureHandler">
		<property name="useForward" value="false"/>
		<property name="defaultFailureUrl" value="/signin/content"/> 	 
	</bean>
	
	<bean id="LogoutSuccessHandler" class="com.mycompany.webapp.security.LogoutSuccessHandler">
		 <property name="defaultTargetUrl" value="/"/> 
	</bean>	
</beans> 

